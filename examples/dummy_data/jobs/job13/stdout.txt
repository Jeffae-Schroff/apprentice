hi  ['a', 'b']
[0] will proceed to calculate approximations for 40 objects
Using 30 of 42 runs from MC data[0] 5/40 (elapsed: 0.8s, to go: 5.5s, ETA: 2022-04-05 08:53:41)[0] 10/40 (elapsed: 0.8s, to go: 2.4s, ETA: 2022-04-05 08:53:38)[0] 15/40 (elapsed: 0.8s, to go: 1.3s, ETA: 2022-04-05 08:53:37)[0] 20/40 (elapsed: 0.8s, to go: 0.8s, ETA: 2022-04-05 08:53:36)[0] 25/40 (elapsed: 0.8s, to go: 0.5s, ETA: 2022-04-05 08:53:36)[0] 30/40 (elapsed: 0.8s, to go: 0.3s, ETA: 2022-04-05 08:53:36)[0] 35/40 (elapsed: 0.8s, to go: 0.1s, ETA: 2022-04-05 08:53:35)[0] 40/40 (elapsed: 0.8s, to go: 0.0s, ETA: 2022-04-05 08:53:35)
Approximation calculation took 0.7954864501953125 seconds
Done --- 42 approximations written to val_30.json
hi  ['a', 'b']
[0] will proceed to calculate approximations for 40 objects
Using 30 of 42 runs from MC data[0] 5/40 (elapsed: 1.2s, to go: 8.9s, ETA: 2022-04-05 08:54:09)[0] 10/40 (elapsed: 1.2s, to go: 3.8s, ETA: 2022-04-05 08:54:04)[0] 15/40 (elapsed: 1.2s, to go: 2.1s, ETA: 2022-04-05 08:54:03)[0] 20/40 (elapsed: 1.2s, to go: 1.3s, ETA: 2022-04-05 08:54:02)[0] 25/40 (elapsed: 1.2s, to go: 0.8s, ETA: 2022-04-05 08:54:01)[0] 30/40 (elapsed: 1.2s, to go: 0.5s, ETA: 2022-04-05 08:54:01)[0] 35/40 (elapsed: 1.2s, to go: 0.2s, ETA: 2022-04-05 08:54:01)[0] 40/40 (elapsed: 1.2s, to go: 0.0s, ETA: 2022-04-05 08:54:00)
Approximation calculation took 1.247880458831787 seconds
Done --- 42 approximations written to err_20.json
Fitted Result:  [0.99665408 0.48963966]
[[  44884.08658345   -1888.27459591]
 [  -1888.27459591 1162276.73408426]]
# Objective value at best fit point: 80.94 (80.94 without weights)
# Degrees of freedom: 26
# chi2/ndf: 3.113
# Minimisation took 3.81 seconds
# Command line: /global/homes/j/jeffae/.conda/envs/mctuning/bin/app-tune2 myweights.txt /global/cscratch1/sd/jeffae/apprentice/examples/dummy_data/data.json val_30.json -o tune_no_errs
# Best fit point:
#
# PNAME	 PVALUE             #    COMMENT    [  PLOW                 ...   PHIGH             ]
#
a     	0.9966540798237642  #               [ 0.041168988591604894  ...  1.9398197043239886 ]
b     	0.48963966106304396 #               [ 0.10496990541124217   ...  0.9455490474077702 ]

Output written to directory tune_no_errs.
Fitted Result:  [0.96660759 0.48988018]
[[  325.14975189 -1324.80756044]
 [-1324.80756044  8390.66021482]]
# Objective value at best fit point: 0.68 (0.68 without weights)
# Degrees of freedom: 26
# chi2/ndf: 0.026
# Minimisation took 3.51 seconds
# Command line: /global/homes/j/jeffae/.conda/envs/mctuning/bin/app-tune2 myweights.txt /global/cscratch1/sd/jeffae/apprentice/examples/dummy_data/data.json val_30.json -e err_20.json -o tune_w_errs
# Best fit point:
#
# PNAME	 PVALUE             #    COMMENT    [  PLOW                 ...   PHIGH             ]
#
a     	0.9666075914978368  #               [ 0.041168988591604894  ...  1.9398197043239886 ]
b     	0.48988018244924625 #               [ 0.10496990541124217   ...  0.9455490474077702 ]

Output written to directory tune_w_errs.
Using covariance matrix associated with coefficients
Fitted Result:  [0.99328018 0.49472201]
[[ 29591.41796875 -21088.68554688]
 [-21088.69140625 499045.65625   ]]
# Objective value at best fit point: 19.18 (19.18 without weights)
# Degrees of freedom: 26
# chi2/ndf: 0.738
# Minimisation took 7.91 seconds
# Command line: /global/homes/j/jeffae/.conda/envs/mctuning/bin/app-tune2 myweights.txt /global/cscratch1/sd/jeffae/apprentice/examples/dummy_data/data.json val_30.json --computecov True -o tune_w_cov
# Best fit point:
#
# PNAME	 PVALUE             #    COMMENT    [  PLOW                 ...   PHIGH             ]
#
a     	0.9932801824376732  #               [ 0.041168988591604894  ...  1.9398197043239886 ]
b     	0.49472200896049584 #               [ 0.10496990541124217   ...  0.9455490474077702 ]

Output written to directory tune_w_cov.
