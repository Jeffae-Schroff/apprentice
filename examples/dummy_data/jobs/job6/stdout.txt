hi  ['a', 'b']
[0] will proceed to calculate approximations for 40 objects
Using 30 of 42 runs from MC data[0] 5/40 (elapsed: 1.1s, to go: 7.9s, ETA: 2022-04-05 08:51:48)[0] 10/40 (elapsed: 1.1s, to go: 3.4s, ETA: 2022-04-05 08:51:43)[0] 15/40 (elapsed: 1.1s, to go: 1.9s, ETA: 2022-04-05 08:51:42)[0] 20/40 (elapsed: 1.1s, to go: 1.2s, ETA: 2022-04-05 08:51:41)[0] 25/40 (elapsed: 1.1s, to go: 0.7s, ETA: 2022-04-05 08:51:41)[0] 30/40 (elapsed: 1.1s, to go: 0.4s, ETA: 2022-04-05 08:51:40)[0] 35/40 (elapsed: 1.1s, to go: 0.2s, ETA: 2022-04-05 08:51:40)[0] 40/40 (elapsed: 1.1s, to go: 0.0s, ETA: 2022-04-05 08:51:40)
Approximation calculation took 1.1214618682861328 seconds
Done --- 42 approximations written to val_30.json
hi  ['a', 'b']
[0] will proceed to calculate approximations for 40 objects
Using 30 of 42 runs from MC data[0] 5/40 (elapsed: 0.6s, to go: 4.2s, ETA: 2022-04-05 08:52:05)[0] 10/40 (elapsed: 0.6s, to go: 1.8s, ETA: 2022-04-05 08:52:03)[0] 15/40 (elapsed: 0.6s, to go: 1.0s, ETA: 2022-04-05 08:52:02)[0] 20/40 (elapsed: 0.6s, to go: 0.6s, ETA: 2022-04-05 08:52:02)[0] 25/40 (elapsed: 0.6s, to go: 0.4s, ETA: 2022-04-05 08:52:02)[0] 30/40 (elapsed: 0.6s, to go: 0.2s, ETA: 2022-04-05 08:52:01)[0] 35/40 (elapsed: 0.6s, to go: 0.1s, ETA: 2022-04-05 08:52:01)[0] 40/40 (elapsed: 0.6s, to go: 0.0s, ETA: 2022-04-05 08:52:01)
Approximation calculation took 0.607628345489502 seconds
Done --- 42 approximations written to err_20.json
Fitted Result:  [0.98806904 0.49257123]
[[  46673.07865292   -6873.53022057]
 [  -6873.53022057 1181875.18991501]]
# Objective value at best fit point: 101.70 (101.70 without weights)
# Degrees of freedom: 26
# chi2/ndf: 3.912
# Minimisation took 3.37 seconds
# Command line: /global/homes/j/jeffae/.conda/envs/mctuning/bin/app-tune2 myweights.txt /global/cscratch1/sd/jeffae/apprentice/examples/dummy_data/data.json val_30.json -o tune_no_errs
# Best fit point:
#
# PNAME	 PVALUE            #    COMMENT    [  PLOW                 ...   PHIGH             ]
#
a     	0.9880690393674784 #               [ 0.041168988591604894  ...  1.9398197043239886 ]
b     	0.492571230713392  #               [ 0.10496990541124217   ...  0.9881982429404655 ]

Output written to directory tune_no_errs.
Fitted Result:  [0.96240621 0.49162437]
[[  344.01621593 -1367.61773003]
 [-1367.61773003  8442.98393237]]
# Objective value at best fit point: 0.71 (0.71 without weights)
# Degrees of freedom: 26
# chi2/ndf: 0.027
# Minimisation took 3.37 seconds
# Command line: /global/homes/j/jeffae/.conda/envs/mctuning/bin/app-tune2 myweights.txt /global/cscratch1/sd/jeffae/apprentice/examples/dummy_data/data.json val_30.json -e err_20.json -o tune_w_errs
# Best fit point:
#
# PNAME	 PVALUE            #    COMMENT    [  PLOW                 ...   PHIGH             ]
#
a     	0.9624062084019449 #               [ 0.041168988591604894  ...  1.9398197043239886 ]
b     	0.4916243739950184 #               [ 0.10496990541124217   ...  0.9881982429404655 ]

Output written to directory tune_w_errs.
Using covariance matrix associated with coefficients
Fitted Result:  [0.99637011 0.49640721]
[[ 28056.4609375  -25562.98632812]
 [-25562.984375   431048.0625    ]]
# Objective value at best fit point: 16.04 (16.04 without weights)
# Degrees of freedom: 26
# chi2/ndf: 0.617
# Minimisation took 10.28 seconds
# Command line: /global/homes/j/jeffae/.conda/envs/mctuning/bin/app-tune2 myweights.txt /global/cscratch1/sd/jeffae/apprentice/examples/dummy_data/data.json val_30.json --computecov True -o tune_w_cov
# Best fit point:
#
# PNAME	 PVALUE             #    COMMENT    [  PLOW                 ...   PHIGH             ]
#
a     	0.9963701063627248  #               [ 0.041168988591604894  ...  1.9398197043239886 ]
b     	0.49640720878147515 #               [ 0.10496990541124217   ...  0.9881982429404655 ]

Output written to directory tune_w_cov.
